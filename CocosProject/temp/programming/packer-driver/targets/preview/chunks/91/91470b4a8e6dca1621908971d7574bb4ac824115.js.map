{"version":3,"sources":["file:///Users/clare/Desktop/%E5%89%8D%E5%93%A8AI%E5%B0%8F%E8%AF%BE/ClareProject/Cute-Pet-Escape-Project/CocosProject/assets/scripts/ui/LobbyUI.ts"],"names":["_decorator","Component","Node","Label","EditBox","Button","director","Color","NetworkManager","ccclass","property","LobbyUI","_networkManager","_isConnecting","start","console","log","getInstance","error","showStatus","setupButtons","setupNetworkEvents","loadingPanel","active","playerNameInput","string","generateRandomName","createRoomButton","node","on","EventType","CLICK","onCreateRoomClick","joinRoomButton","onJoinRoomClick","roomId","onRoomReady","onNetworkError","playerName","getPlayerName","setButtonsEnabled","showLoading","success","createRoom","getRoomId","joinRoom","scheduleOnce","loadGameScene","message","type","gameSceneName","loadScene","defaultPlayerName","name","trim","roomIdInput","isError","statusLabel","color","show","enabled","interactable","adjectives","nouns","adj","Math","floor","random","length","noun","num","onDestroy","off"],"mappings":"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","sourcesContent":["// 文件名: LobbyUI.ts\n// 功能: 大厅UI - 创建/加入房间（任务4.1）\n\nimport { _decorator, Component, Node, Label, EditBox, Button, director, Color } from 'cc';\nimport { NetworkManager } from '../network/NetworkManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('LobbyUI')\nexport class LobbyUI extends Component {\n    // ============ UI元素 ============\n    @property(EditBox)\n    public playerNameInput: EditBox | null = null; // 玩家名称输入框\n\n    @property(EditBox)\n    public roomIdInput: EditBox | null = null; // 房间ID输入框\n\n    @property(Button)\n    public createRoomButton: Button | null = null; // 创建房间按钮\n\n    @property(Button)\n    public joinRoomButton: Button | null = null; // 加入房间按钮\n\n    @property(Label)\n    public statusLabel: Label | null = null; // 状态提示Label\n\n    @property(Node)\n    public loadingPanel: Node | null = null; // 加载中面板（可选）\n\n    // ============ 配置 ============\n    @property\n    public gameSceneName: string = \"GameScene\"; // 游戏场景名称\n\n    @property\n    public defaultPlayerName: string = \"Player\"; // 默认玩家名称\n\n    // 私有成员\n    private _networkManager: NetworkManager | null = null;\n    private _isConnecting: boolean = false;\n\n    start() {\n        console.log('[LobbyUI] 大厅UI初始化');\n\n        // 获取NetworkManager\n        this._networkManager = NetworkManager.getInstance();\n        if (!this._networkManager) {\n            console.error('[LobbyUI] NetworkManager未找到！');\n            this.showStatus('网络管理器未初始化', true);\n            return;\n        }\n\n        // 绑定按钮事件\n        this.setupButtons();\n\n        // 注册网络事件\n        this.setupNetworkEvents();\n\n        // 隐藏加载面板\n        if (this.loadingPanel) {\n            this.loadingPanel.active = false;\n        }\n\n        // 设置默认玩家名称\n        if (this.playerNameInput) {\n            this.playerNameInput.string = this.generateRandomName();\n        }\n\n        this.showStatus('请输入玩家名称并创建或加入房间', false);\n    }\n\n    /**\n     * 设置按钮事件\n     */\n    private setupButtons() {\n        if (this.createRoomButton) {\n            this.createRoomButton.node.on(Button.EventType.CLICK, this.onCreateRoomClick, this);\n        }\n\n        if (this.joinRoomButton) {\n            this.joinRoomButton.node.on(Button.EventType.CLICK, this.onJoinRoomClick, this);\n        }\n    }\n\n    /**\n     * 设置网络事件\n     */\n    private setupNetworkEvents() {\n        if (!this._networkManager) return;\n\n        // 房间创建成功\n        this._networkManager.on('roomCreated', (roomId: string) => {\n            this.onRoomReady(roomId);\n        });\n\n        // 房间加入成功\n        this._networkManager.on('roomJoined', (roomId: string) => {\n            this.onRoomReady(roomId);\n        });\n\n        // 错误处理\n        this._networkManager.on('error', (error: any) => {\n            this.onNetworkError(error);\n        });\n    }\n\n    /**\n     * 创建房间按钮点击\n     */\n    private async onCreateRoomClick() {\n        if (this._isConnecting) {\n            console.log('[LobbyUI] 正在连接中，请稍候...');\n            return;\n        }\n\n        const playerName = this.getPlayerName();\n        if (!playerName) {\n            this.showStatus('请输入玩家名称', true);\n            return;\n        }\n\n        this._isConnecting = true;\n        this.setButtonsEnabled(false);\n        this.showLoading(true);\n        this.showStatus('正在创建房间...', false);\n\n        const success = await this._networkManager!.createRoom(playerName);\n\n        if (!success) {\n            this._isConnecting = false;\n            this.setButtonsEnabled(true);\n            this.showLoading(false);\n            this.showStatus('创建房间失败，请重试', true);\n        }\n    }\n\n    /**\n     * 加入房间按钮点击\n     */\n    private async onJoinRoomClick() {\n        if (this._isConnecting) {\n            console.log('[LobbyUI] 正在连接中，请稍候...');\n            return;\n        }\n\n        const playerName = this.getPlayerName();\n        const roomId = this.getRoomId();\n\n        if (!playerName) {\n            this.showStatus('请输入玩家名称', true);\n            return;\n        }\n\n        if (!roomId) {\n            this.showStatus('请输入房间ID', true);\n            return;\n        }\n\n        this._isConnecting = true;\n        this.setButtonsEnabled(false);\n        this.showLoading(true);\n        this.showStatus(`正在加入房间 ${roomId}...`, false);\n\n        const success = await this._networkManager!.joinRoom(roomId, playerName);\n\n        if (!success) {\n            this._isConnecting = false;\n            this.setButtonsEnabled(true);\n            this.showLoading(false);\n            this.showStatus('加入房间失败，请检查房间ID', true);\n        }\n    }\n\n    /**\n     * 房间准备就绪\n     */\n    private onRoomReady(roomId: string) {\n        console.log(`[LobbyUI] 房间准备就绪: ${roomId}`);\n        this.showStatus(`成功连接到房间 ${roomId}`, false);\n\n        // 延迟1秒后切换到游戏场景\n        this.scheduleOnce(() => {\n            this.loadGameScene();\n        }, 1.0);\n    }\n\n    /**\n     * 网络错误处理\n     */\n    private onNetworkError(error: any) {\n        console.error('[LobbyUI] 网络错误:', error);\n\n        this._isConnecting = false;\n        this.setButtonsEnabled(true);\n        this.showLoading(false);\n\n        let message = '网络错误';\n        if (error.type === 'createRoom') {\n            message = '创建房间失败: ' + error.message;\n        } else if (error.type === 'joinRoom') {\n            message = '加入房间失败: ' + error.message;\n        }\n\n        this.showStatus(message, true);\n    }\n\n    /**\n     * 加载游戏场景\n     */\n    private loadGameScene() {\n        console.log(`[LobbyUI] 加载游戏场景: ${this.gameSceneName}`);\n        director.loadScene(this.gameSceneName, (error) => {\n            if (error) {\n                console.error('[LobbyUI] 加载场景失败:', error);\n                this.showStatus('加载游戏场景失败', true);\n                this._isConnecting = false;\n                this.setButtonsEnabled(true);\n                this.showLoading(false);\n            }\n        });\n    }\n\n    // ============ UI工具方法 ============\n\n    /**\n     * 获取玩家名称\n     */\n    private getPlayerName(): string {\n        if (!this.playerNameInput) return this.defaultPlayerName;\n        const name = this.playerNameInput.string.trim();\n        return name || this.defaultPlayerName;\n    }\n\n    /**\n     * 获取房间ID\n     */\n    private getRoomId(): string {\n        if (!this.roomIdInput) return \"\";\n        return this.roomIdInput.string.trim();\n    }\n\n    /**\n     * 显示状态信息\n     */\n    private showStatus(message: string, isError: boolean) {\n        if (!this.statusLabel) return;\n\n        this.statusLabel.string = message;\n        this.statusLabel.color = isError\n            ? new Color(255, 0, 0, 255)  // 红色\n            : new Color(255, 255, 255, 255); // 白色\n\n        console.log(`[LobbyUI] ${isError ? '错误' : '状态'}: ${message}`);\n    }\n\n    /**\n     * 显示/隐藏加载面板\n     */\n    private showLoading(show: boolean) {\n        if (!this.loadingPanel) return;\n        this.loadingPanel.active = show;\n    }\n\n    /**\n     * 启用/禁用按钮\n     */\n    private setButtonsEnabled(enabled: boolean) {\n        if (this.createRoomButton) {\n            this.createRoomButton.interactable = enabled;\n        }\n        if (this.joinRoomButton) {\n            this.joinRoomButton.interactable = enabled;\n        }\n    }\n\n    /**\n     * 生成随机玩家名称\n     */\n    private generateRandomName(): string {\n        const adjectives = ['快乐', '勇敢', '聪明', '可爱', '神秘'];\n        const nouns = ['小猫', '小狗', '小兔', '小熊', '小鸟'];\n        const adj = adjectives[Math.floor(Math.random() * adjectives.length)];\n        const noun = nouns[Math.floor(Math.random() * nouns.length)];\n        const num = Math.floor(Math.random() * 100);\n        return `${adj}的${noun}${num}`;\n    }\n\n    onDestroy() {\n        // 清理事件监听\n        if (this.createRoomButton) {\n            this.createRoomButton.node.off(Button.EventType.CLICK, this.onCreateRoomClick, this);\n        }\n        if (this.joinRoomButton) {\n            this.joinRoomButton.node.off(Button.EventType.CLICK, this.onJoinRoomClick, this);\n        }\n    }\n}\n"]}