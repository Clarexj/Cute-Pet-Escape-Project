{"version":3,"sources":["file:///Users/clare/Desktop/%E5%89%8D%E5%93%A8AI%E5%B0%8F%E8%AF%BE/ClareProject/Cute-Pet-Escape-Project/CocosProject/assets/scripts/TeamStatusUI.ts"],"names":["_decorator","Component","Sprite","Label","Color","CharacterStateType","ccclass","property","TeamStatusUI","_characterState","_memberIndex","start","stateTextLabel","node","active","showStateText","bindCharacter","characterState","index","memberIndexLabel","string","onStateChange","oldState","newState","updateDisplay","console","log","name","statusSprite","state","getCurrentState","updateColor","updateStateText","color","NORMAL","normalColor","CAUGHT","caughtColor","HANGED","hangedColor","ELIMINATED","eliminatedColor","stateText","getMemberIndex","getCharacterNode","refresh"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAISA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,K,OAAAA,K;;AAC5BC,MAAAA,kB,iBAAAA,kB;;;;;oFALzB;AACA;AACA;;;;;OAIM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;8BAGjBQ,Y,WADZF,OAAO,CAAC,cAAD,C,UAEHC,QAAQ,CAACL,MAAD,C,UAGRK,QAAQ,CAACJ,KAAD,C,UAGRI,QAAQ,CAACJ,KAAD,C,2BARb,MACaK,YADb,SACkCP,SADlC,CAC4C;AAAA;AAAA;;AAAA;;AAEG;AAFH;;AAKM;AALN;;AAQI;AAE5C;AAVwC;;AAYe;AAZf;;AAeiB;AAfjB;;AAkBe;AAlBf;;AAqBuB;AArBvB;;AAwBD;AAEvC;AA1BwC,eA2BhCQ,eA3BgC,GA2BS,IA3BT;AAAA,eA4BhCC,YA5BgC,GA4BT,CAAC,CA5BQ;AAAA;;AA8BxCC,QAAAA,KAAK,GAAG;AACJ;AACA,cAAI,KAAKC,cAAT,EAAyB;AACrB,iBAAKA,cAAL,CAAoBC,IAApB,CAAyBC,MAAzB,GAAkC,KAAKC,aAAvC;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;;;AACWC,QAAAA,aAAa,CAACC,cAAD,EAAiCC,KAAjC,EAAgD;AAChE,eAAKT,eAAL,GAAuBQ,cAAvB;AACA,eAAKP,YAAL,GAAoBQ,KAApB,CAFgE,CAIhE;;AACA,cAAI,KAAKC,gBAAT,EAA2B;AACvB,iBAAKA,gBAAL,CAAsBC,MAAtB,SAAkCF,KAAK,GAAG,CAA1C,EADuB,CACwB;AAClD,WAP+D,CAShE;;;AACAD,UAAAA,cAAc,CAACI,aAAf,CAA6B,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACjD,iBAAKF,aAAL,CAAmBC,QAAnB,EAA6BC,QAA7B;AACH,WAFD,EAVgE,CAchE;;AACA,eAAKC,aAAL;AAEAC,UAAAA,OAAO,CAACC,GAAR,8CAAmCR,KAAnC,UAA6CD,cAAc,CAACJ,IAAf,CAAoBc,IAAjE;AACH;AAED;AACJ;AACA;;;AACYN,QAAAA,aAAa,CAACC,QAAD,EAA+BC,QAA/B,EAA6D;AAC9EE,UAAAA,OAAO,CAACC,GAAR,kCAAiC,KAAKhB,YAAtC,mCAA4DY,QAA5D,YAA2EC,QAA3E;AACA,eAAKC,aAAL;AACH;AAED;AACJ;AACA;;;AACYA,QAAAA,aAAa,GAAG;AACpB,cAAI,CAAC,KAAKf,eAAN,IAAyB,CAAC,KAAKmB,YAAnC,EAAiD;;AAEjD,cAAMC,KAAK,GAAG,KAAKpB,eAAL,CAAqBqB,eAArB,EAAd,CAHoB,CAKpB;;;AACA,eAAKC,WAAL,CAAiBF,KAAjB,EANoB,CAQpB;;AACA,cAAI,KAAKd,aAAL,IAAsB,KAAKH,cAA/B,EAA+C;AAC3C,iBAAKoB,eAAL,CAAqBH,KAArB;AACH;AACJ;AAED;AACJ;AACA;;;AACYE,QAAAA,WAAW,CAACF,KAAD,EAA4B;AAC3C,cAAI,CAAC,KAAKD,YAAV,EAAwB;AAExB,cAAIK,KAAJ;;AAEA,kBAAQJ,KAAR;AACI,iBAAK;AAAA;AAAA,0DAAmBK,MAAxB;AACID,cAAAA,KAAK,GAAG,KAAKE,WAAb;AACA;;AACJ,iBAAK;AAAA;AAAA,0DAAmBC,MAAxB;AACIH,cAAAA,KAAK,GAAG,KAAKI,WAAb;AACA;;AACJ,iBAAK;AAAA;AAAA,0DAAmBC,MAAxB;AACIL,cAAAA,KAAK,GAAG,KAAKM,WAAb;AACA;;AACJ,iBAAK;AAAA;AAAA,0DAAmBC,UAAxB;AACIP,cAAAA,KAAK,GAAG,KAAKQ,eAAb;AACA;;AACJ;AACIR,cAAAA,KAAK,GAAG,KAAKE,WAAb;AAdR;;AAiBA,eAAKP,YAAL,CAAkBK,KAAlB,GAA0BA,KAA1B;AACH;AAED;AACJ;AACA;;;AACYD,QAAAA,eAAe,CAACH,KAAD,EAA4B;AAC/C,cAAI,CAAC,KAAKjB,cAAV,EAA0B;AAE1B,cAAI8B,SAAJ;;AAEA,kBAAQb,KAAR;AACI,iBAAK;AAAA;AAAA,0DAAmBK,MAAxB;AACIQ,cAAAA,SAAS,GAAG,IAAZ;AACA;;AACJ,iBAAK;AAAA;AAAA,0DAAmBN,MAAxB;AACIM,cAAAA,SAAS,GAAG,IAAZ;AACA;;AACJ,iBAAK;AAAA;AAAA,0DAAmBJ,MAAxB;AACII,cAAAA,SAAS,GAAG,IAAZ;AACA;;AACJ,iBAAK;AAAA;AAAA,0DAAmBF,UAAxB;AACIE,cAAAA,SAAS,GAAG,IAAZ;AACA;;AACJ;AACIA,cAAAA,SAAS,GAAG,IAAZ;AAdR;;AAiBA,eAAK9B,cAAL,CAAoBQ,MAApB,GAA6BsB,SAA7B;AACH;AAED;AACJ;AACA;;;AACWZ,QAAAA,eAAe,GAA8B;AAChD,iBAAO,KAAKrB,eAAL,GAAuB,KAAKA,eAAL,CAAqBqB,eAArB,EAAvB,GAAgE,IAAvE;AACH;AAED;AACJ;AACA;;;AACWa,QAAAA,cAAc,GAAW;AAC5B,iBAAO,KAAKjC,YAAZ;AACH;AAED;AACJ;AACA;;;AACWkC,QAAAA,gBAAgB,GAAgB;AACnC,iBAAO,KAAKnC,eAAL,GAAuB,KAAKA,eAAL,CAAqBI,IAA5C,GAAmD,IAA1D;AACH;AAED;AACJ;AACA;;;AACWgC,QAAAA,OAAO,GAAG;AACb,eAAKrB,aAAL;AACH;;AAzKuC,O;;;;;iBAEH,I;;;;;;;iBAGG,I;;;;;;;iBAGF,I;;sFAGrCjB,Q;;;;;iBAC2B,IAAIH,KAAJ,CAAU,CAAV,EAAa,GAAb,EAAkB,CAAlB,EAAqB,GAArB,C;;sFAE3BG,Q;;;;;iBAC2B,IAAIH,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,CAApB,EAAuB,GAAvB,C;;sFAE3BG,Q;;;;;iBAC2B,IAAIH,KAAJ,CAAU,GAAV,EAAe,CAAf,EAAkB,CAAlB,EAAqB,GAArB,C;;0FAE3BG,Q;;;;;iBAC+B,IAAIH,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,C;;wFAE/BG,Q;;;;;iBAC+B,K","sourcesContent":["// 文件名: TeamStatusUI.ts\n// 功能：团队成员状态UI组件（任务3.2）\n// 单个团队成员状态方块的显示逻辑\n\nimport { _decorator, Component, Node, Sprite, Label, Color } from 'cc';\nimport { CharacterState, CharacterStateType } from './CharacterState';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TeamStatusUI')\nexport class TeamStatusUI extends Component {\n    @property(Sprite)\n    public statusSprite: Sprite | null = null; // 状态方块\n\n    @property(Label)\n    public memberIndexLabel: Label | null = null; // 成员编号（可选，显示1、2、3、4）\n\n    @property(Label)\n    public stateTextLabel: Label | null = null; // 状态文字（可选，显示\"正常\"、\"被抓\"等）\n\n    // 状态颜色配置\n    @property\n    public normalColor: Color = new Color(0, 255, 0, 255); // 正常：绿色\n\n    @property\n    public caughtColor: Color = new Color(255, 165, 0, 255); // 被抓：橙色\n\n    @property\n    public hangedColor: Color = new Color(255, 0, 0, 255); // 被挂起：红色\n\n    @property\n    public eliminatedColor: Color = new Color(128, 128, 128, 255); // 淘汰：灰色\n\n    @property\n    public showStateText: boolean = false; // 是否显示状态文字\n\n    // 私有成员\n    private _characterState: CharacterState | null = null;\n    private _memberIndex: number = -1;\n\n    start() {\n        // 初始化状态文字可见性\n        if (this.stateTextLabel) {\n            this.stateTextLabel.node.active = this.showStateText;\n        }\n    }\n\n    /**\n     * 绑定角色状态\n     * @param characterState 角色状态组件\n     * @param index 成员索引（0-3）\n     */\n    public bindCharacter(characterState: CharacterState, index: number) {\n        this._characterState = characterState;\n        this._memberIndex = index;\n\n        // 设置成员编号\n        if (this.memberIndexLabel) {\n            this.memberIndexLabel.string = `${index + 1}`; // 显示1-4\n        }\n\n        // 注册状态变化回调\n        characterState.onStateChange((oldState, newState) => {\n            this.onStateChange(oldState, newState);\n        });\n\n        // 初始化显示\n        this.updateDisplay();\n\n        console.log(`[TeamStatusUI] 绑定成员 ${index}: ${characterState.node.name}`);\n    }\n\n    /**\n     * 状态变化回调\n     */\n    private onStateChange(oldState: CharacterStateType, newState: CharacterStateType) {\n        console.log(`[TeamStatusUI] 成员 ${this._memberIndex} 状态变化: ${oldState} -> ${newState}`);\n        this.updateDisplay();\n    }\n\n    /**\n     * 更新显示\n     */\n    private updateDisplay() {\n        if (!this._characterState || !this.statusSprite) return;\n\n        const state = this._characterState.getCurrentState();\n\n        // 更新颜色\n        this.updateColor(state);\n\n        // 更新状态文字（如果启用）\n        if (this.showStateText && this.stateTextLabel) {\n            this.updateStateText(state);\n        }\n    }\n\n    /**\n     * 更新颜色\n     */\n    private updateColor(state: CharacterStateType) {\n        if (!this.statusSprite) return;\n\n        let color: Color;\n\n        switch (state) {\n            case CharacterStateType.NORMAL:\n                color = this.normalColor;\n                break;\n            case CharacterStateType.CAUGHT:\n                color = this.caughtColor;\n                break;\n            case CharacterStateType.HANGED:\n                color = this.hangedColor;\n                break;\n            case CharacterStateType.ELIMINATED:\n                color = this.eliminatedColor;\n                break;\n            default:\n                color = this.normalColor;\n        }\n\n        this.statusSprite.color = color;\n    }\n\n    /**\n     * 更新状态文字\n     */\n    private updateStateText(state: CharacterStateType) {\n        if (!this.stateTextLabel) return;\n\n        let stateText: string;\n\n        switch (state) {\n            case CharacterStateType.NORMAL:\n                stateText = '正常';\n                break;\n            case CharacterStateType.CAUGHT:\n                stateText = '被抓';\n                break;\n            case CharacterStateType.HANGED:\n                stateText = '挂起';\n                break;\n            case CharacterStateType.ELIMINATED:\n                stateText = '淘汰';\n                break;\n            default:\n                stateText = '未知';\n        }\n\n        this.stateTextLabel.string = stateText;\n    }\n\n    /**\n     * 获取当前状态\n     */\n    public getCurrentState(): CharacterStateType | null {\n        return this._characterState ? this._characterState.getCurrentState() : null;\n    }\n\n    /**\n     * 获取成员索引\n     */\n    public getMemberIndex(): number {\n        return this._memberIndex;\n    }\n\n    /**\n     * 获取绑定的角色节点\n     */\n    public getCharacterNode(): Node | null {\n        return this._characterState ? this._characterState.node : null;\n    }\n\n    /**\n     * 手动刷新显示（供外部调用）\n     */\n    public refresh() {\n        this.updateDisplay();\n    }\n}\n"]}