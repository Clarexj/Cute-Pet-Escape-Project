{"version":3,"sources":["file:///Users/clare/Desktop/%E5%89%8D%E5%93%A8AI%E5%B0%8F%E8%AF%BE/ClareProject/Cute-Pet-Escape-Project/CocosProject/assets/scripts/Joystick.ts"],"names":["_decorator","Component","Node","Vec2","ccclass","property","Joystick","_touchId","_touchStartPos","_direction","_strength","_tempVec2","onLoad","stick","console","error","node","on","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","onDestroy","off","event","touch","getID","uiPos","getUILocation","set","x","y","distance","length","maxRadius","normalize","multiplyScalar","setPosition","rawStrength","Math","min","deadZone","getDirection","clone","getDirectionOut","out","getStrength","isActive"],"mappings":"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","sourcesContent":["// 文件名: Joystick.ts\n// 功能：虚拟摇杆控制组件，用于触摸屏操作\n// 版本：V1.1 - 性能优化版\n\nimport { _decorator, Component, Node, Vec2, Vec3, UITransform, EventTouch } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Joystick')\nexport class Joystick extends Component {\n    @property(Node)\n    public stick: Node = null!; // 摇杆中心的小圆点\n\n    @property\n    public maxRadius: number = 100; // 摇杆最大拖动半径\n\n    @property\n    public deadZone: number = 0.1; // 死区半径（0-1），避免误触\n\n    private _touchId: number = -1; // 当前触摸ID\n    private _touchStartPos: Vec2 = new Vec2(); // 触摸起始位置\n    private _direction: Vec2 = new Vec2(0, 0); // 归一化方向向量 (-1到1)\n    private _strength: number = 0; // 摇杆偏移强度 (0到1)\n\n    // 性能优化：复用临时变量\n    private _tempVec2: Vec2 = new Vec2();\n\n    onLoad() {\n        // 检查stick节点是否绑定\n        if (!this.stick) {\n            console.error('[Joystick] stick节点未绑定！请在编辑器中将JoystickStick节点拖到Stick属性框。');\n            return;\n        }\n\n        // 监听触摸事件\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd, this);\n        this.node.on(Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\n    }\n\n    onDestroy() {\n        this.node.off(Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.off(Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.off(Node.EventType.TOUCH_END, this.onTouchEnd, this);\n        this.node.off(Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\n    }\n\n    private onTouchStart(event: EventTouch) {\n        // 记录触摸ID和起始位置\n        this._touchId = event.touch!.getID();\n        const uiPos = event.getUILocation();\n        this._touchStartPos.set(uiPos.x, uiPos.y);\n    }\n\n    private onTouchMove(event: EventTouch) {\n        // 只处理当前触摸\n        if (event.touch!.getID() !== this._touchId) return;\n        if (!this.stick) return; // 安全检查\n\n        const uiPos = event.getUILocation();\n\n        // 计算偏移量（复用对象）\n        this._tempVec2.set(\n            uiPos.x - this._touchStartPos.x,\n            uiPos.y - this._touchStartPos.y\n        );\n\n        const distance = this._tempVec2.length();\n\n        // 限制在最大半径内\n        if (distance > this.maxRadius) {\n            this._tempVec2.normalize().multiplyScalar(this.maxRadius);\n        }\n\n        // 更新摇杆视觉位置\n        this.stick.setPosition(this._tempVec2.x, this._tempVec2.y, 0);\n\n        // 计算强度（原始强度）\n        const rawStrength = Math.min(distance / this.maxRadius, 1.0);\n\n        // 应用死区\n        if (rawStrength < this.deadZone) {\n            this._strength = 0;\n            this._direction.set(0, 0);\n        } else {\n            // 重新映射强度到0-1范围（死区外）\n            this._strength = (rawStrength - this.deadZone) / (1 - this.deadZone);\n\n            // 计算方向\n            if (distance > 0.01) {\n                this._direction.set(this._tempVec2.x, this._tempVec2.y);\n                this._direction.normalize();\n            } else {\n                this._direction.set(0, 0);\n            }\n        }\n    }\n\n    private onTouchEnd(event: EventTouch) {\n        // 只处理当前触摸\n        if (event.touch!.getID() !== this._touchId) return;\n        if (!this.stick) return; // 安全检查\n\n        // 重置摇杆\n        this._touchId = -1;\n        this.stick.setPosition(0, 0, 0);\n        this._direction.set(0, 0);\n        this._strength = 0;\n    }\n\n    /**\n     * 获取摇杆方向 (归一化的2D向量)\n     * @returns Vec2 x和y范围都是-1到1\n     */\n    public getDirection(): Vec2 {\n        return this._direction.clone();\n    }\n\n    /**\n     * ✅ 优化：获取摇杆方向（复用传入的Vec2，避免GC）\n     * @param out 输出向量\n     * @returns Vec2 返回传入的out对象\n     */\n    public getDirectionOut(out: Vec2): Vec2 {\n        out.set(this._direction.x, this._direction.y);\n        return out;\n    }\n\n    /**\n     * 获取摇杆强度\n     * @returns number 0到1之间的值\n     */\n    public getStrength(): number {\n        return this._strength;\n    }\n\n    /**\n     * 是否正在操作摇杆\n     */\n    public isActive(): boolean {\n        return this._touchId !== -1;\n    }\n}\n"]}