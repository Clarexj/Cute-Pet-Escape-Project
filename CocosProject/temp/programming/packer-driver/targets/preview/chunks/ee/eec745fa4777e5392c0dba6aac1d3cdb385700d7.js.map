{"version":3,"sources":["file:///Users/clare/Desktop/%E5%89%8D%E5%93%A8AI%E5%B0%8F%E8%AF%BE/ClareProject/Cute-Pet-Escape-Project/CocosProject/assets/scripts/UIManager.ts"],"names":["_decorator","Component","Node","Label","Sprite","Color","GameManager","CharacterState","CharacterStateType","ccclass","property","UIManager","_gameManager","_teamMembers","start","console","log","getInstance","error","onStatsChange","stats","initializeTeamMemberUI","updateAllUI","update","deltaTime","isPlaying","updateTimerDisplay","autoFindTeamMembers","allCharacters","node","scene","getComponentsInChildren","survivors","filter","char","name","toLowerCase","includes","length","warn","teamMemberSprites","maxMembers","Math","min","survivor","i","sprite","memberData","characterNode","characterState","uiSprite","push","onStateChange","oldState","newState","onCharacterStateChange","updateTeamMemberColor","enableDebugLog","state","getCurrentState","color","NORMAL","normalColor","CAUGHT","caughtColor","HANGED","hangedColor","ELIMINATED","eliminatedColor","updateOreProgressDisplay","getStats","updateTeamMemberUI","timerLabel","timeRemaining","getTimeRemaining","minutes","floor","seconds","string","padZero","oreProgressLabel","oresRequired","getOresRequiredForExit","oreCollected","num","refreshUI","getTeamMemberCount","getTeamMemberState","index","debugPrintTeamStatus","member","toString"],"mappings":"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","sourcesContent":["// 文件名: UIManager.ts\n// 功能：HUD核心UI管理器（任务3.2）\n// 管理倒计时、矿石进度、团队成员状态等核心UI元素\n\nimport { _decorator, Component, Node, Label, Sprite, Color } from 'cc';\nimport { GameManager, GameStats } from './GameManager';\nimport { CharacterState, CharacterStateType, StateChangeCallback } from './CharacterState';\nconst { ccclass, property } = _decorator;\n\n/**\n * 团队成员UI状态\n */\ninterface TeamMemberUIData {\n    characterNode: Node;           // 角色节点引用\n    characterState: CharacterState; // 角色状态组件\n    uiSprite: Sprite;              // UI显示方块\n}\n\n@ccclass('UIManager')\nexport class UIManager extends Component {\n    // ============ 倒计时UI ============\n    @property(Label)\n    public timerLabel: Label | null = null; // 倒计时显示（格式：05:00）\n\n    // ============ 矿石进度UI ============\n    @property(Label)\n    public oreProgressLabel: Label | null = null; // 矿石进度显示（格式：0/8）\n\n    // ============ 团队成员状态UI ============\n    @property(Node)\n    public teamStatusContainer: Node | null = null; // 团队状态容器节点\n\n    @property([Sprite])\n    public teamMemberSprites: Sprite[] = []; // 4个团队成员状态方块（手动绑定）\n\n    @property\n    public autoFindTeamMembers: boolean = true; // 自动查找场景中的逃生者\n\n    // ============ 状态颜色配置 ============\n    @property\n    public normalColor: Color = new Color(0, 255, 0, 255); // 正常状态：绿色\n\n    @property\n    public caughtColor: Color = new Color(255, 165, 0, 255); // 被抓状态：橙色\n\n    @property\n    public hangedColor: Color = new Color(255, 0, 0, 255); // 被挂起状态：红色\n\n    @property\n    public eliminatedColor: Color = new Color(128, 128, 128, 255); // 淘汰状态：灰色\n\n    // ============ 调试选项 ============\n    @property\n    public enableDebugLog: boolean = false; // 是否启用调试日志\n\n    // 私有成员\n    private _gameManager: GameManager | null = null;\n    private _teamMembers: TeamMemberUIData[] = []; // 团队成员数据列表\n\n    start() {\n        console.log('[UIManager] HUD UI管理器初始化');\n\n        // 获取GameManager单例\n        this._gameManager = GameManager.getInstance();\n        if (!this._gameManager) {\n            console.error('[UIManager] GameManager未找到！请确保场景中有GameManager组件');\n            return;\n        }\n\n        // 注册GameManager回调\n        this._gameManager.onStatsChange((stats) => {\n            this.onStatsChange(stats);\n        });\n\n        // 初始化团队成员UI\n        this.initializeTeamMemberUI();\n\n        // 显示初始数据\n        this.updateAllUI();\n\n        console.log('[UIManager] HUD UI初始化完成');\n    }\n\n    update(deltaTime: number) {\n        if (!this._gameManager || !this._gameManager.isPlaying()) return;\n\n        // 每帧更新倒计时（确保精确显示）\n        this.updateTimerDisplay();\n    }\n\n    // ============ 团队成员UI初始化 ============\n\n    /**\n     * 初始化团队成员UI\n     */\n    private initializeTeamMemberUI() {\n        if (!this.autoFindTeamMembers) {\n            console.log('[UIManager] 自动查找已禁用，需要手动配置团队成员');\n            return;\n        }\n\n        // 查找场景中所有带CharacterState组件的逃生者\n        const allCharacters = this.node.scene.getComponentsInChildren(CharacterState);\n\n        // 筛选出逃生者（排除追捕者）\n        // 假设追捕者节点名包含\"Hunter\"，逃生者节点名包含\"Survivor\"\n        const survivors = allCharacters.filter(char =>\n            char.node.name.toLowerCase().includes('survivor')\n        );\n\n        if (survivors.length === 0) {\n            console.warn('[UIManager] 场景中未找到逃生者节点，团队成员UI将无法显示');\n            return;\n        }\n\n        if (survivors.length > this.teamMemberSprites.length) {\n            console.warn(`[UIManager] 逃生者数量(${survivors.length})超过UI方块数量(${this.teamMemberSprites.length})，部分角色不会显示`);\n        }\n\n        // 绑定逃生者与UI方块\n        const maxMembers = Math.min(survivors.length, this.teamMemberSprites.length);\n        for (let i = 0; i < maxMembers; i++) {\n            const survivor = survivors[i];\n            const sprite = this.teamMemberSprites[i];\n\n            if (!sprite) {\n                console.warn(`[UIManager] teamMemberSprites[${i}]未绑定，跳过`);\n                continue;\n            }\n\n            // 创建团队成员UI数据\n            const memberData: TeamMemberUIData = {\n                characterNode: survivor.node,\n                characterState: survivor,\n                uiSprite: sprite\n            };\n\n            this._teamMembers.push(memberData);\n\n            // 注册状态变化回调\n            survivor.onStateChange((oldState: CharacterStateType, newState: CharacterStateType) => {\n                this.onCharacterStateChange(memberData, oldState, newState);\n            });\n\n            // 初始化颜色\n            this.updateTeamMemberColor(memberData);\n\n            if (this.enableDebugLog) {\n                console.log(`[UIManager] 绑定团队成员 ${i}: ${survivor.node.name}`);\n            }\n        }\n\n        console.log(`[UIManager] 成功绑定 ${this._teamMembers.length} 个团队成员UI`);\n    }\n\n    /**\n     * 角色状态变化回调\n     */\n    private onCharacterStateChange(memberData: TeamMemberUIData, oldState: CharacterStateType, newState: CharacterStateType) {\n        if (this.enableDebugLog) {\n            console.log(`[UIManager] ${memberData.characterNode.name} 状态变化: ${oldState} -> ${newState}`);\n        }\n\n        this.updateTeamMemberColor(memberData);\n    }\n\n    /**\n     * 更新团队成员UI颜色\n     */\n    private updateTeamMemberColor(memberData: TeamMemberUIData) {\n        const state = memberData.characterState.getCurrentState();\n        let color: Color;\n\n        switch (state) {\n            case CharacterStateType.NORMAL:\n                color = this.normalColor;\n                break;\n            case CharacterStateType.CAUGHT:\n                color = this.caughtColor;\n                break;\n            case CharacterStateType.HANGED:\n                color = this.hangedColor;\n                break;\n            case CharacterStateType.ELIMINATED:\n                color = this.eliminatedColor;\n                break;\n            default:\n                color = this.normalColor;\n        }\n\n        memberData.uiSprite.color = color;\n    }\n\n    // ============ 统计数据更新 ============\n\n    /**\n     * GameManager统计数据变化回调\n     */\n    private onStatsChange(stats: GameStats) {\n        this.updateOreProgressDisplay(stats);\n        this.updateTimerDisplay();\n    }\n\n    /**\n     * 更新所有UI元素\n     */\n    private updateAllUI() {\n        if (!this._gameManager) return;\n\n        const stats = this._gameManager.getStats();\n        this.updateTimerDisplay();\n        this.updateOreProgressDisplay(stats);\n        this.updateTeamMemberUI();\n    }\n\n    /**\n     * 更新倒计时显示\n     */\n    private updateTimerDisplay() {\n        if (!this.timerLabel || !this._gameManager) return;\n\n        const timeRemaining = this._gameManager.getTimeRemaining();\n        const minutes = Math.floor(timeRemaining / 60);\n        const seconds = Math.floor(timeRemaining % 60);\n\n        // 格式化为 MM:SS\n        this.timerLabel.string = `${this.padZero(minutes)}:${this.padZero(seconds)}`;\n\n        // ✅ 倒计时 < 60秒时变红色提示\n        if (timeRemaining <= 60 && timeRemaining > 0) {\n            this.timerLabel.color = new Color(255, 0, 0, 255); // 红色\n        } else {\n            this.timerLabel.color = new Color(255, 255, 255, 255); // 白色\n        }\n    }\n\n    /**\n     * 更新矿石进度显示\n     */\n    private updateOreProgressDisplay(stats: GameStats) {\n        if (!this.oreProgressLabel || !this._gameManager) return;\n\n        const oresRequired = this._gameManager.getOresRequiredForExit();\n        this.oreProgressLabel.string = `${stats.oreCollected}/${oresRequired}`;\n\n        // ✅ 矿石收集完成时变绿色提示\n        if (stats.oreCollected >= oresRequired) {\n            this.oreProgressLabel.color = new Color(0, 255, 0, 255); // 绿色\n        } else {\n            this.oreProgressLabel.color = new Color(255, 255, 255, 255); // 白色\n        }\n    }\n\n    /**\n     * 更新团队成员UI（手动刷新所有成员颜色）\n     */\n    private updateTeamMemberUI() {\n        for (const memberData of this._teamMembers) {\n            this.updateTeamMemberColor(memberData);\n        }\n    }\n\n    // ============ 工具方法 ============\n\n    /**\n     * 补零（01, 02, ..., 09, 10）\n     */\n    private padZero(num: number): string {\n        return num < 10 ? `0${num}` : `${num}`;\n    }\n\n    /**\n     * 手动刷新UI（供外部调用）\n     */\n    public refreshUI() {\n        this.updateAllUI();\n    }\n\n    /**\n     * 获取团队成员数量\n     */\n    public getTeamMemberCount(): number {\n        return this._teamMembers.length;\n    }\n\n    /**\n     * 获取指定团队成员的状态\n     */\n    public getTeamMemberState(index: number): CharacterStateType | null {\n        if (index < 0 || index >= this._teamMembers.length) {\n            return null;\n        }\n        return this._teamMembers[index].characterState.getCurrentState();\n    }\n\n    // ============ 调试功能 ============\n\n    /**\n     * 打印所有团队成员状态（调试用）\n     */\n    public debugPrintTeamStatus() {\n        console.log('=== 团队成员状态 ===');\n        for (let i = 0; i < this._teamMembers.length; i++) {\n            const member = this._teamMembers[i];\n            const state = member.characterState.getCurrentState();\n            const color = member.uiSprite.color;\n            console.log(`[${i}] ${member.characterNode.name}: ${state} (颜色: ${color.toString()})`);\n        }\n        console.log('==================');\n    }\n}\n"]}