{"version":3,"sources":["file:///Users/clare/Desktop/%E5%89%8D%E5%93%A8AI%E5%B0%8F%E8%AF%BE/ClareProject/Cute-Pet-Escape-Project/CocosProject/assets/scripts/InteractionUI.ts"],"names":["_decorator","Component","Node","Button","Label","UIOpacity","ProgressBar","PlayerController","CharacterState","ccclass","property","InteractionUI","_button","_uiOpacity","_isVisible","_fadeTimer","_targetOpacity","_isRescueMode","_currentRescueTarget","onLoad","buttonNode","console","error","getComponent","addComponent","opacity","rescueProgressBar","node","active","progress","on","EventType","CLICK","onButtonClick","start","player","onInteractionChange","interactable","showButton","getInteractPrompt","hideButton","onRescueTargetChange","target","onDestroy","off","update","deltaTime","opacityDiff","changeSpeed","fadeDuration","changeAmount","Math","abs","sign","targetState","isBeingRescued","getRescueProgress","promptText","isRescue","promptLabel","string","log","triggerRescue","triggerInteraction","setVisible","visible"],"mappings":"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","sourcesContent":["// 文件名: InteractionUI.ts\n// 功能：交互按钮UI控制（显示/隐藏，触发交互）+ 救援系统\n// 版本：V1.1 - 支持救援交互（任务2.1）\n\nimport { _decorator, Component, Node, Button, Label, UIOpacity, ProgressBar } from 'cc';\nimport { PlayerController } from './PlayerController';\nimport { CharacterState } from './CharacterState';\nconst { ccclass, property } = _decorator;\n\n@ccclass('InteractionUI')\nexport class InteractionUI extends Component {\n    @property(PlayerController)\n    public player: PlayerController = null!; // 玩家控制器引用\n\n    @property(Node)\n    public buttonNode: Node = null!; // 交互按钮节点\n\n    @property(Label)\n    public promptLabel: Label = null!; // 提示文本Label（可选）\n\n    @property(ProgressBar)\n    public rescueProgressBar: ProgressBar = null!; // 救援进度条（可选）\n\n    @property\n    public fadeDuration: number = 0.2; // 淡入淡出动画时长（秒）\n\n    private _button: Button = null!; // 按钮组件\n    private _uiOpacity: UIOpacity = null!; // 透明度组件\n    private _isVisible: boolean = false; // 当前是否可见\n    private _fadeTimer: number = 0; // 淡入淡出计时器\n    private _targetOpacity: number = 0; // 目标透明度\n\n    // 任务2.1新增：救援模式\n    private _isRescueMode: boolean = false; // 是否是救援模式\n    private _currentRescueTarget: Node | null = null; // 当前救援目标\n\n    onLoad() {\n        // 获取按钮组件\n        if (!this.buttonNode) {\n            console.error('[InteractionUI] buttonNode未绑定！');\n            return;\n        }\n\n        this._button = this.buttonNode.getComponent(Button);\n        if (!this._button) {\n            console.error('[InteractionUI] buttonNode上没有Button组件！');\n            return;\n        }\n\n        // 获取或添加UIOpacity组件\n        this._uiOpacity = this.buttonNode.getComponent(UIOpacity);\n        if (!this._uiOpacity) {\n            this._uiOpacity = this.buttonNode.addComponent(UIOpacity);\n        }\n\n        // 初始隐藏按钮\n        this._uiOpacity.opacity = 0;\n        this._targetOpacity = 0;\n        this._isVisible = false;\n\n        // 初始隐藏救援进度条\n        if (this.rescueProgressBar) {\n            this.rescueProgressBar.node.active = false;\n            this.rescueProgressBar.progress = 0;\n        }\n\n        // 监听按钮点击事件\n        this._button.node.on(Button.EventType.CLICK, this.onButtonClick, this);\n    }\n\n    start() {\n        // 检查玩家控制器引用\n        if (!this.player) {\n            console.error('[InteractionUI] player未绑定！');\n            return;\n        }\n\n        // 注册交互状态变化回调\n        this.player.onInteractionChange((interactable) => {\n            // 救援模式优先级更高，如果正在救援则不响应普通交互\n            if (this._isRescueMode) return;\n\n            if (interactable) {\n                // 有可交互物体，显示按钮\n                this.showButton(interactable.getInteractPrompt(), false);\n            } else {\n                // 没有可交互物体，隐藏按钮\n                this.hideButton();\n            }\n        });\n\n        // 任务2.1新增：注册救援目标变化回调\n        this.player.onRescueTargetChange((target) => {\n            if (target) {\n                // 有可救援的队友，显示救援按钮\n                this._isRescueMode = true;\n                this._currentRescueTarget = target;\n                this.showButton(\"救援\", true);\n            } else {\n                // 没有可救援的队友\n                if (this._isRescueMode) {\n                    this._isRescueMode = false;\n                    this._currentRescueTarget = null;\n                    this.hideButton();\n                }\n            }\n        });\n    }\n\n    onDestroy() {\n        // 清理事件监听\n        if (this._button) {\n            this._button.node.off(Button.EventType.CLICK, this.onButtonClick, this);\n        }\n    }\n\n    update(deltaTime: number) {\n        // 平滑淡入淡出动画\n        if (this._uiOpacity.opacity !== this._targetOpacity) {\n            const opacityDiff = this._targetOpacity - this._uiOpacity.opacity;\n            const changeSpeed = 255 / this.fadeDuration; // 每秒变化速度\n            const changeAmount = changeSpeed * deltaTime;\n\n            if (Math.abs(opacityDiff) <= changeAmount) {\n                // 到达目标透明度\n                this._uiOpacity.opacity = this._targetOpacity;\n            } else {\n                // 平滑过渡\n                this._uiOpacity.opacity += Math.sign(opacityDiff) * changeAmount;\n            }\n        }\n\n        // 任务2.1新增：更新救援进度条\n        if (this._isRescueMode && this._currentRescueTarget && this.rescueProgressBar) {\n            const targetState = this._currentRescueTarget.getComponent(CharacterState);\n            if (targetState && targetState.isBeingRescued()) {\n                this.rescueProgressBar.node.active = true;\n                this.rescueProgressBar.progress = targetState.getRescueProgress();\n            } else {\n                this.rescueProgressBar.node.active = false;\n            }\n        }\n    }\n\n    /**\n     * 显示按钮\n     * @param promptText 提示文本\n     * @param isRescue 是否是救援模式\n     */\n    private showButton(promptText?: string, isRescue: boolean = false) {\n        if (this._isVisible) return;\n\n        this._isVisible = true;\n        this._targetOpacity = 255;\n\n        // 更新提示文本\n        if (this.promptLabel && promptText) {\n            this.promptLabel.string = promptText;\n        }\n\n        console.log(`[InteractionUI] 显示${isRescue ? '救援' : '交互'}按钮`);\n    }\n\n    /**\n     * 隐藏按钮\n     */\n    private hideButton() {\n        if (!this._isVisible) return;\n\n        this._isVisible = false;\n        this._targetOpacity = 0;\n\n        // 同时隐藏救援进度条\n        if (this.rescueProgressBar) {\n            this.rescueProgressBar.node.active = false;\n            this.rescueProgressBar.progress = 0;\n        }\n\n        console.log('[InteractionUI] 隐藏交互按钮');\n    }\n\n    /**\n     * 按钮点击事件\n     */\n    private onButtonClick() {\n        console.log(`[InteractionUI] ${this._isRescueMode ? '救援' : '交互'}按钮被点击`);\n\n        // 触发玩家交互或救援\n        if (this.player) {\n            if (this._isRescueMode) {\n                this.player.triggerRescue();\n            } else {\n                this.player.triggerInteraction();\n            }\n        }\n    }\n\n    /**\n     * 手动设置按钮可见性（用于测试）\n     */\n    public setVisible(visible: boolean) {\n        if (visible) {\n            this.showButton();\n        } else {\n            this.hideButton();\n        }\n    }\n}\n"]}