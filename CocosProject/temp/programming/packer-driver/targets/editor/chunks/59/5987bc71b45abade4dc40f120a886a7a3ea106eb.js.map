{"version":3,"sources":["file:///Users/clare/Desktop/%E5%89%8D%E5%93%A8AI%E5%B0%8F%E8%AF%BE/ClareProject/Cute-Pet-Escape-Project/CocosProject/assets/scripts/CameraFollow.ts"],"names":["_decorator","Component","Node","Vec3","Quat","ccclass","property","CameraFollow","_currentOffset","_targetOffset","_lookAtPoint","start","calculateTargetOffset","set","updateCameraPosition","lateUpdate","deltaTime","target","lerp","smoothSpeed","pitchRad","pitchAngle","Math","PI","horizontalDist","followDistance","cos","verticalDist","sin","followHeight","targetPos","getWorldPosition","cameraPos","clone","add","node","setWorldPosition","x","y","lookAtHeight","z","forward","subtract","normalize","rotation","fromViewUp","setWorldRotation","setPitchAngle","angle","max","min","setFollowDistance","distance"],"mappings":"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","sourcesContent":["// 文件名: CameraFollow.ts\n// 功能：第三人称摄像机跟随系统（为任务1.2的镜头旋转预留接口）\n\nimport { _decorator, Component, Node, Vec3, Quat } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('CameraFollow')\nexport class CameraFollow extends Component {\n    @property(Node)\n    public target: Node = null!; // 跟随目标（玩家角色）\n\n    @property\n    public followDistance: number = 8.0; // 摄像机距离角色的距离\n\n    @property\n    public followHeight: number = 5.0; // 摄像机高度偏移\n\n    @property\n    public lookAtHeight: number = 1.0; // 摄像机看向目标的高度偏移\n\n    @property\n    public smoothSpeed: number = 5.0; // 跟随平滑速度\n\n    @property\n    public pitchAngle: number = 30.0; // 俯仰角度（向下看的角度）\n\n    private _currentOffset: Vec3 = new Vec3(); // 当前偏移量\n    private _targetOffset: Vec3 = new Vec3(); // 目标偏移量\n    private _lookAtPoint: Vec3 = new Vec3(); // 看向点\n\n    start() {\n        // 初始化摄像机偏移\n        this.calculateTargetOffset();\n        this._currentOffset.set(this._targetOffset);\n        this.updateCameraPosition(0);\n    }\n\n    lateUpdate(deltaTime: number) {\n        if (!this.target) return;\n\n        // 计算目标偏移\n        this.calculateTargetOffset();\n\n        // 平滑插值到目标偏移\n        Vec3.lerp(this._currentOffset, this._currentOffset, this._targetOffset, this.smoothSpeed * deltaTime);\n\n        // 更新摄像机位置和朝向\n        this.updateCameraPosition(deltaTime);\n    }\n\n    /**\n     * 计算摄像机相对角色的目标偏移\n     * （为任务1.2预留：这里可以加入水平旋转角度参数）\n     */\n    private calculateTargetOffset() {\n        // 当前是固定的后上方视角\n        // 任务1.2时，可以根据玩家拖动修改这个偏移方向\n\n        // 俯仰角转弧度\n        const pitchRad = this.pitchAngle * (Math.PI / 180);\n\n        // 计算水平距离和垂直距离\n        const horizontalDist = this.followDistance * Math.cos(pitchRad);\n        const verticalDist = this.followDistance * Math.sin(pitchRad) + this.followHeight;\n\n        // 默认在角色正后方（可以后续改为可旋转）\n        this._targetOffset.set(0, verticalDist, -horizontalDist);\n    }\n\n    /**\n     * 更新摄像机位置和朝向\n     */\n    private updateCameraPosition(deltaTime: number) {\n        // 摄像机位置 = 角色位置 + 偏移\n        const targetPos = this.target.getWorldPosition();\n        const cameraPos = targetPos.clone().add(this._currentOffset);\n        this.node.setWorldPosition(cameraPos);\n\n        // 摄像机看向角色（加上高度偏移）\n        this._lookAtPoint.set(\n            targetPos.x,\n            targetPos.y + this.lookAtHeight,\n            targetPos.z\n        );\n\n        // 计算朝向\n        const forward = this._lookAtPoint.clone().subtract(cameraPos).normalize();\n        const rotation = new Quat();\n        Quat.fromViewUp(rotation, forward);\n        this.node.setWorldRotation(rotation);\n    }\n\n    /**\n     * 设置俯仰角（任务1.2可能会用到）\n     */\n    public setPitchAngle(angle: number) {\n        this.pitchAngle = Math.max(-85, Math.min(85, angle)); // 限制在-85到85度\n    }\n\n    /**\n     * 设置跟随距离\n     */\n    public setFollowDistance(distance: number) {\n        this.followDistance = Math.max(3.0, Math.min(15.0, distance)); // 限制距离\n    }\n}\n"]}