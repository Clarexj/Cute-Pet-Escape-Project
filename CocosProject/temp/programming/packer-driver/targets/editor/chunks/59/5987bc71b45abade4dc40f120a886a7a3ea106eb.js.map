{"version":3,"sources":["file:///Users/clare/Desktop/%E5%89%8D%E5%93%A8AI%E5%B0%8F%E8%AF%BE/ClareProject/Cute-Pet-Escape-Project/CocosProject/assets/scripts/CameraFollow.ts"],"names":["_decorator","Component","Node","Vec3","Quat","ccclass","property","CameraFollow","_currentOffset","_targetOffset","_lookAtPoint","_yawAngle","_targetYawAngle","_tempVec3","_tempQuat","start","calculateTargetOffset","set","updateCameraPosition","lateUpdate","deltaTime","target","angleDiff","rotationSmoothSpeed","lerp","smoothSpeed","pitchRad","pitchAngle","Math","PI","yawRad","horizontalDist","followDistance","cos","verticalDist","sin","followHeight","offsetX","offsetZ","targetPos","getWorldPosition","add","node","setWorldPosition","x","y","lookAtHeight","z","subtract","worldPosition","normalize","fromViewUp","setWorldRotation","setYawAngle","angle","addYawAngle","delta","getYawAngle","setPitchAngle","max","min","setFollowDistance","distance"],"mappings":"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","sourcesContent":["// 文件名: CameraFollow.ts\n// 功能：第三人称摄像机跟随系统，支持水平旋转（任务1.2）\n\nimport { _decorator, Component, Node, Vec3, Quat } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('CameraFollow')\nexport class CameraFollow extends Component {\n    @property(Node)\n    public target: Node = null!; // 跟随目标（玩家角色）\n\n    @property\n    public followDistance: number = 8.0; // 摄像机距离角色的距离\n\n    @property\n    public followHeight: number = 5.0; // 摄像机高度偏移\n\n    @property\n    public lookAtHeight: number = 1.0; // 摄像机看向目标的高度偏移\n\n    @property\n    public smoothSpeed: number = 5.0; // 跟随平滑速度\n\n    @property\n    public pitchAngle: number = 30.0; // 俯仰角度（向下看的角度）\n\n    @property\n    public rotationSmoothSpeed: number = 7.0; // 旋转平滑速度（优化：降低避免\"飘\"的感觉）\n\n    private _currentOffset: Vec3 = new Vec3(); // 当前偏移量\n    private _targetOffset: Vec3 = new Vec3(); // 目标偏移量\n    private _lookAtPoint: Vec3 = new Vec3(); // 看向点\n\n    // 任务1.2新增：水平旋转角度（yaw angle）\n    private _yawAngle: number = 0; // 当前水平旋转角度\n    private _targetYawAngle: number = 0; // 目标水平旋转角度\n\n    // 性能优化：复用临时变量\n    private _tempVec3: Vec3 = new Vec3();\n    private _tempQuat: Quat = new Quat();\n\n    start() {\n        // 初始化摄像机偏移\n        this.calculateTargetOffset();\n        this._currentOffset.set(this._targetOffset);\n        this.updateCameraPosition(0);\n    }\n\n    lateUpdate(deltaTime: number) {\n        if (!this.target) return;\n\n        // 平滑插值水平旋转角度\n        const angleDiff = this._targetYawAngle - this._yawAngle;\n        this._yawAngle += angleDiff * this.rotationSmoothSpeed * deltaTime;\n\n        // 计算目标偏移\n        this.calculateTargetOffset();\n\n        // 平滑插值到目标偏移\n        Vec3.lerp(this._currentOffset, this._currentOffset, this._targetOffset, this.smoothSpeed * deltaTime);\n\n        // 更新摄像机位置和朝向\n        this.updateCameraPosition(deltaTime);\n    }\n\n    /**\n     * 计算摄像机相对角色的目标偏移（支持水平旋转）\n     */\n    private calculateTargetOffset() {\n        // 俯仰角转弧度\n        const pitchRad = this.pitchAngle * (Math.PI / 180);\n\n        // 水平角转弧度\n        const yawRad = this._yawAngle * (Math.PI / 180);\n\n        // 计算水平距离和垂直距离\n        const horizontalDist = this.followDistance * Math.cos(pitchRad);\n        const verticalDist = this.followDistance * Math.sin(pitchRad) + this.followHeight;\n\n        // 根据水平旋转角度计算偏移（围绕角色旋转）\n        const offsetX = horizontalDist * Math.sin(yawRad);\n        const offsetZ = -horizontalDist * Math.cos(yawRad);\n\n        this._targetOffset.set(offsetX, verticalDist, offsetZ);\n    }\n\n    /**\n     * 更新摄像机位置和朝向\n     */\n    private updateCameraPosition(deltaTime: number) {\n        // 获取角色位置（只获取一次，复用）\n        const targetPos = this.target.getWorldPosition(this._tempVec3);\n\n        // 摄像机位置 = 角色位置 + 偏移\n        Vec3.add(this._tempVec3, targetPos, this._currentOffset);\n        this.node.setWorldPosition(this._tempVec3);\n\n        // 摄像机看向角色（加上高度偏移）\n        this._lookAtPoint.set(\n            targetPos.x,\n            targetPos.y + this.lookAtHeight,\n            targetPos.z\n        );\n\n        // 计算朝向（复用_tempVec3）\n        Vec3.subtract(this._tempVec3, this._lookAtPoint, this.node.worldPosition);\n        this._tempVec3.normalize();\n        Quat.fromViewUp(this._tempQuat, this._tempVec3);\n        this.node.setWorldRotation(this._tempQuat);\n    }\n\n    /**\n     * 设置水平旋转角度（任务1.2新增）\n     * @param angle 水平旋转角度（度）\n     */\n    public setYawAngle(angle: number) {\n        this._targetYawAngle = angle;\n    }\n\n    /**\n     * 增加水平旋转角度（任务1.2新增）\n     * @param delta 角度增量（度）\n     */\n    public addYawAngle(delta: number) {\n        this._targetYawAngle += delta;\n        // 规范化到-180到180度\n        while (this._targetYawAngle > 180) this._targetYawAngle -= 360;\n        while (this._targetYawAngle < -180) this._targetYawAngle += 360;\n    }\n\n    /**\n     * 获取当前水平旋转角度\n     */\n    public getYawAngle(): number {\n        return this._yawAngle;\n    }\n\n    /**\n     * 设置俯仰角\n     */\n    public setPitchAngle(angle: number) {\n        this.pitchAngle = Math.max(-85, Math.min(85, angle)); // 限制在-85到85度\n    }\n\n    /**\n     * 设置跟随距离\n     */\n    public setFollowDistance(distance: number) {\n        this.followDistance = Math.max(3.0, Math.min(15.0, distance)); // 限制距离\n    }\n}\n"]}