{"version":3,"sources":["file:///Users/clare/Desktop/%E5%89%8D%E5%93%A8AI%E5%B0%8F%E8%AF%BE/ClareProject/Cute-Pet-Escape-Project/CocosProject/assets/scripts/network/NetworkGameManager.ts"],"names":["_decorator","Component","director","ccclass","property","NetworkGameManager","client","room","localSessionId","onLoad","_instance","console","warn","node","destroy","addPersistRootNode","log","start","autoCreateRoom","scheduleOnce","initializeNetwork","Colyseus","error","Client","serverUrl","playerName","trim","generateRandomName","createRoom","characterType","create","roomName","sessionId","id","setupRoomEvents","joinRoom","roomId","joinById","state","players","onAdd","player","name","onPlayerJoined","onRemove","onPlayerLeft","onChange","onPlayerStateChanged","setupCustomMessages","onMessage","message","onOreCollectedNetwork","onPlayerCapturedNetwork","onPlayerHangedNetwork","onPlayerRescuedNetwork","onPlayerEscapedNetwork","onGameOverNetwork","sendPlayerMove","x","y","z","rotationY","isMoving","animationState","send","timestamp","Date","now","sendOreCollected","oreId","sendPlayerCaptured","targetSessionId","hunterSessionId","sendPlayerHanged","cageId","sendPlayerRescued","rescuerSessionId","sendPlayerEscaped","adjectives","nouns","adj","Math","floor","random","length","noun","num","getRoomId","getLocalSessionId","isConnected","getPlayerCount","size","getInstance","onDestroy","leave"],"mappings":"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","sourcesContent":["// 文件名: NetworkGameManager.ts\n// 功能: 网络游戏管理器 - 统一管理所有网络功能（任务4.1-4.4）\n// 自动在GameScene启动时创建/加入房间，并同步所有游戏状态\n\nimport { _decorator, Component, director } from 'cc';\nimport { NetworkManager } from './NetworkManager';\nconst { ccclass, property } = _decorator;\n\n// 声明Colyseus全局对象\ndeclare const Colyseus: any;\n\n@ccclass('NetworkGameManager')\nexport class NetworkGameManager extends Component {\n    @property\n    public serverUrl: string = 'ws://localhost:2567';\n\n    @property\n    public roomName: string = 'game_room';\n\n    @property\n    public autoCreateRoom: boolean = true; // 自动创建房间\n\n    @property\n    public playerName: string = ''; // 玩家名称（空则自动生成）\n\n    @property\n    public characterType: string = 'survivor'; // 角色类型: survivor 或 hunter\n\n    // Colyseus客户端和房间\n    private client: any = null;\n    private room: any = null;\n    private localSessionId: string = '';\n\n    // 单例\n    private static _instance: NetworkGameManager | null = null;\n\n    onLoad() {\n        // 单例模式\n        if (NetworkGameManager._instance) {\n            console.warn('[NetworkGameManager] 已存在实例，销毁当前节点');\n            this.node.destroy();\n            return;\n        }\n        NetworkGameManager._instance = this;\n\n        // 跨场景持久化\n        director.addPersistRootNode(this.node);\n\n        console.log('[NetworkGameManager] 网络游戏管理器初始化');\n    }\n\n    start() {\n        // 自动连接并创建房间\n        if (this.autoCreateRoom) {\n            this.scheduleOnce(() => {\n                this.initializeNetwork();\n            }, 0.5); // 延迟0.5秒，确保场景加载完成\n        }\n    }\n\n    /**\n     * 初始化网络连接\n     */\n    private async initializeNetwork() {\n        try {\n            console.log('[NetworkGameManager] 正在初始化网络连接...');\n\n            // 创建Colyseus客户端\n            if (typeof Colyseus === 'undefined') {\n                console.error('[NetworkGameManager] Colyseus未加载！请检查colyseus.js是否正确引入');\n                return;\n            }\n\n            this.client = new Colyseus.Client(this.serverUrl);\n            console.log(`[NetworkGameManager] Colyseus客户端创建成功: ${this.serverUrl}`);\n\n            // 生成玩家名称\n            if (!this.playerName || this.playerName.trim() === '') {\n                this.playerName = this.generateRandomName();\n            }\n\n            // 创建房间\n            await this.createRoom();\n\n        } catch (error) {\n            console.error('[NetworkGameManager] 网络初始化失败:', error);\n        }\n    }\n\n    /**\n     * 创建房间\n     */\n    private async createRoom() {\n        try {\n            console.log(`[NetworkGameManager] 正在创建房间...`);\n            console.log(`[NetworkGameManager] 玩家名称: ${this.playerName}`);\n            console.log(`[NetworkGameManager] 角色类型: ${this.characterType}`);\n\n            this.room = await this.client.create(this.roomName, {\n                playerName: this.playerName,\n                characterType: this.characterType\n            });\n\n            this.localSessionId = this.room.sessionId;\n\n            console.log(`[NetworkGameManager] ✅ 房间创建成功！`);\n            console.log(`[NetworkGameManager] 房间ID: ${this.room.id}`);\n            console.log(`[NetworkGameManager] 会话ID: ${this.localSessionId}`);\n\n            // 设置房间事件监听\n            this.setupRoomEvents();\n\n        } catch (error) {\n            console.error('[NetworkGameManager] 创建房间失败:', error);\n        }\n    }\n\n    /**\n     * 加入房间\n     */\n    public async joinRoom(roomId: string) {\n        try {\n            console.log(`[NetworkGameManager] 正在加入房间: ${roomId}`);\n\n            this.room = await this.client.joinById(roomId, {\n                playerName: this.playerName,\n                characterType: this.characterType\n            });\n\n            this.localSessionId = this.room.sessionId;\n\n            console.log(`[NetworkGameManager] ✅ 加入房间成功！`);\n            console.log(`[NetworkGameManager] 房间ID: ${this.room.id}`);\n            console.log(`[NetworkGameManager] 会话ID: ${this.localSessionId}`);\n\n            this.setupRoomEvents();\n\n        } catch (error) {\n            console.error('[NetworkGameManager] 加入房间失败:', error);\n        }\n    }\n\n    /**\n     * 设置房间事件监听\n     */\n    private setupRoomEvents() {\n        if (!this.room) return;\n\n        // 玩家加入\n        this.room.state.players.onAdd((player: any, sessionId: string) => {\n            console.log(`[NetworkGameManager] 👤 玩家加入: ${player.name} (${sessionId})`);\n            this.onPlayerJoined(player, sessionId);\n        });\n\n        // 玩家离开\n        this.room.state.players.onRemove((player: any, sessionId: string) => {\n            console.log(`[NetworkGameManager] 👋 玩家离开: ${player.name} (${sessionId})`);\n            this.onPlayerLeft(player, sessionId);\n        });\n\n        // 玩家状态变化\n        this.room.state.players.onAdd((player: any, sessionId: string) => {\n            player.onChange(() => {\n                this.onPlayerStateChanged(player, sessionId);\n            });\n        });\n\n        // 监听自定义消息\n        this.setupCustomMessages();\n    }\n\n    /**\n     * 设置自定义消息监听（任务4.2-4.4）\n     */\n    private setupCustomMessages() {\n        if (!this.room) return;\n\n        // 矿石收集事件\n        this.room.onMessage('oreCollected', (message: any) => {\n            console.log('[NetworkGameManager] 📦 矿石被收集:', message);\n            this.onOreCollectedNetwork(message);\n        });\n\n        // 玩家被抓事件\n        this.room.onMessage('playerCaptured', (message: any) => {\n            console.log('[NetworkGameManager] 🎯 玩家被抓:', message);\n            this.onPlayerCapturedNetwork(message);\n        });\n\n        // 玩家被挂起事件\n        this.room.onMessage('playerHanged', (message: any) => {\n            console.log('[NetworkGameManager] 🪝 玩家被挂起:', message);\n            this.onPlayerHangedNetwork(message);\n        });\n\n        // 玩家被救援事件\n        this.room.onMessage('playerRescued', (message: any) => {\n            console.log('[NetworkGameManager] 🆘 玩家被救援:', message);\n            this.onPlayerRescuedNetwork(message);\n        });\n\n        // 玩家逃脱事件\n        this.room.onMessage('playerEscaped', (message: any) => {\n            console.log('[NetworkGameManager] 🚪 玩家逃脱:', message);\n            this.onPlayerEscapedNetwork(message);\n        });\n\n        // 游戏结束事件\n        this.room.onMessage('gameOver', (message: any) => {\n            console.log('[NetworkGameManager] 🏁 游戏结束:', message);\n            this.onGameOverNetwork(message);\n        });\n    }\n\n    // ============ 网络事件回调 ============\n\n    private onPlayerJoined(player: any, sessionId: string) {\n        // TODO: 创建远程玩家\n    }\n\n    private onPlayerLeft(player: any, sessionId: string) {\n        // TODO: 销毁远程玩家\n    }\n\n    private onPlayerStateChanged(player: any, sessionId: string) {\n        // TODO: 更新远程玩家状态\n    }\n\n    private onOreCollectedNetwork(message: any) {\n        // TODO: 同步矿石收集\n    }\n\n    private onPlayerCapturedNetwork(message: any) {\n        // TODO: 同步玩家被抓\n    }\n\n    private onPlayerHangedNetwork(message: any) {\n        // TODO: 同步玩家被挂起\n    }\n\n    private onPlayerRescuedNetwork(message: any) {\n        // TODO: 同步玩家被救援\n    }\n\n    private onPlayerEscapedNetwork(message: any) {\n        // TODO: 同步玩家逃脱\n    }\n\n    private onGameOverNetwork(message: any) {\n        // TODO: 同步游戏结束\n    }\n\n    // ============ 发送网络消息 ============\n\n    /**\n     * 发送玩家移动\n     */\n    public sendPlayerMove(x: number, y: number, z: number, rotationY: number, isMoving: boolean, animationState: string) {\n        if (!this.room) return;\n\n        this.room.send('playerMove', {\n            x, y, z,\n            rotationY,\n            isMoving,\n            animationState,\n            timestamp: Date.now()\n        });\n    }\n\n    /**\n     * 发送矿石收集\n     */\n    public sendOreCollected(oreId: string) {\n        if (!this.room) return;\n\n        this.room.send('oreCollected', {\n            oreId,\n            sessionId: this.localSessionId,\n            timestamp: Date.now()\n        });\n    }\n\n    /**\n     * 发送玩家被抓\n     */\n    public sendPlayerCaptured(targetSessionId: string) {\n        if (!this.room) return;\n\n        this.room.send('playerCaptured', {\n            hunterSessionId: this.localSessionId,\n            targetSessionId,\n            timestamp: Date.now()\n        });\n    }\n\n    /**\n     * 发送玩家被挂起\n     */\n    public sendPlayerHanged(targetSessionId: string, cageId: string) {\n        if (!this.room) return;\n\n        this.room.send('playerHanged', {\n            hunterSessionId: this.localSessionId,\n            targetSessionId,\n            cageId,\n            timestamp: Date.now()\n        });\n    }\n\n    /**\n     * 发送玩家被救援\n     */\n    public sendPlayerRescued(rescuerSessionId: string, targetSessionId: string) {\n        if (!this.room) return;\n\n        this.room.send('playerRescued', {\n            rescuerSessionId,\n            targetSessionId,\n            timestamp: Date.now()\n        });\n    }\n\n    /**\n     * 发送玩家逃脱\n     */\n    public sendPlayerEscaped(sessionId: string) {\n        if (!this.room) return;\n\n        this.room.send('playerEscaped', {\n            sessionId,\n            timestamp: Date.now()\n        });\n    }\n\n    // ============ 工具方法 ============\n\n    /**\n     * 生成随机玩家名称\n     */\n    private generateRandomName(): string {\n        const adjectives = ['快乐', '勇敢', '聪明', '可爱', '神秘', '强大', '灵活', '狡猾'];\n        const nouns = ['小猫', '小狗', '小兔', '小熊', '小鸟', '小鱼', '小狼', '小虎'];\n        const adj = adjectives[Math.floor(Math.random() * adjectives.length)];\n        const noun = nouns[Math.floor(Math.random() * nouns.length)];\n        const num = Math.floor(Math.random() * 100);\n        return `${adj}的${noun}${num}`;\n    }\n\n    /**\n     * 获取房间ID\n     */\n    public getRoomId(): string {\n        return this.room ? this.room.id : '';\n    }\n\n    /**\n     * 获取本地会话ID\n     */\n    public getLocalSessionId(): string {\n        return this.localSessionId;\n    }\n\n    /**\n     * 是否已连接\n     */\n    public isConnected(): boolean {\n        return this.room !== null;\n    }\n\n    /**\n     * 获取玩家数量\n     */\n    public getPlayerCount(): number {\n        return this.room ? this.room.state.players.size : 0;\n    }\n\n    // ============ 单例访问 ============\n\n    public static getInstance(): NetworkGameManager | null {\n        return NetworkGameManager._instance;\n    }\n\n    onDestroy() {\n        if (NetworkGameManager._instance === this) {\n            NetworkGameManager._instance = null;\n        }\n\n        // 离开房间\n        if (this.room) {\n            this.room.leave();\n            this.room = null;\n        }\n    }\n}\n"]}