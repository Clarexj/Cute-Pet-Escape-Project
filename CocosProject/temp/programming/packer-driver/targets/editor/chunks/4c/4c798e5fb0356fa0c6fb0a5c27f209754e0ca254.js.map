{"version":3,"sources":["file:///Users/clare/Desktop/%E5%89%8D%E5%93%A8AI%E5%B0%8F%E8%AF%BE/ClareProject/Cute-Pet-Escape-Project/CocosProject/assets/scripts/GameUI.ts"],"names":["_decorator","Component","Node","Label","GameManager","GameState","ccclass","property","GameUI","_gameManager","_exitDoorNotified","start","getInstance","console","error","onStateChange","newState","stats","onGameStateChange","onStatsChange","gameOverPanel","active","exitDoorNotification","node","updateStatsDisplay","getStats","log","update","deltaTime","isPlaying","updateTimerDisplay","getTimeRemaining","PLAYING","WAITING","showGameOver","isExitZoneGenerated","showExitDoorNotification","timeRemaining","timerLabel","minutes","Math","floor","seconds","timeStr","toString","padStart","string","color","constructor","oreLabel","oreCollected","escapedLabel","survivorsEscaped","eliminatedLabel","survivorsEliminated","result","gameOverLabel","warn","resultText","HUNTER_WIN","SURVIVOR_WIN","DRAW","hideGameOver","scheduleOnce","notificationDuration","onRestartButtonClick","restartGame","onStartButtonClick","startGame","debugEscape","debugEliminate","debugSetTime","setTimeRemaining"],"mappings":"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","sourcesContent":["// 文件名: GameUI.ts\n// 功能：游戏UI显示 - 倒计时、统计数据、游戏结果（任务2.2）\n\nimport { _decorator, Component, Node, Label } from 'cc';\nimport { GameManager, GameState, GameStats } from './GameManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameUI')\nexport class GameUI extends Component {\n    @property(Label)\n    public timerLabel: Label = null!; // 倒计时显示\n\n    @property(Label)\n    public oreLabel: Label = null!; // 矿石数量显示\n\n    @property(Label)\n    public escapedLabel: Label = null!; // 逃脱人数显示\n\n    @property(Label)\n    public eliminatedLabel: Label = null!; // 淘汰人数显示\n\n    @property(Node)\n    public gameOverPanel: Node = null!; // 游戏结束面板\n\n    @property(Label)\n    public gameOverLabel: Label = null!; // 游戏结束文字\n\n    @property(Label)\n    public exitDoorNotification: Label | null = null; // 逃生门开启提示（可选）\n\n    @property\n    public notificationDuration: number = 5.0; // 提示显示时长（秒）\n\n    @property\n    public showDebugInfo: boolean = true; // 是否显示调试信息\n\n    private _gameManager: GameManager | null = null;\n    private _exitDoorNotified: boolean = false; // 是否已显示逃生门提示\n\n    start() {\n        // 获取GameManager单例\n        this._gameManager = GameManager.getInstance();\n\n        if (!this._gameManager) {\n            console.error('[GameUI] GameManager未找到！请确保场景中有GameManager组件');\n            return;\n        }\n\n        // 注册回调\n        this._gameManager.onStateChange((newState, stats) => {\n            this.onGameStateChange(newState, stats);\n        });\n\n        this._gameManager.onStatsChange((stats) => {\n            this.onStatsChange(stats);\n        });\n\n        // 初始化UI\n        if (this.gameOverPanel) {\n            this.gameOverPanel.active = false;\n        }\n\n        if (this.exitDoorNotification) {\n            this.exitDoorNotification.node.active = false;\n        }\n\n        // 显示初始统计\n        this.updateStatsDisplay(this._gameManager.getStats());\n\n        console.log('[GameUI] 游戏UI初始化完成');\n    }\n\n    update(deltaTime: number) {\n        if (!this._gameManager || !this._gameManager.isPlaying()) return;\n\n        // 每帧更新倒计时显示（确保精确）\n        this.updateTimerDisplay(this._gameManager.getTimeRemaining());\n    }\n\n    // ============ 回调处理 ============\n\n    /**\n     * 游戏状态变化\n     */\n    private onGameStateChange(newState: GameState, stats: GameStats) {\n        console.log(`[GameUI] 游戏状态变化：${newState}`);\n\n        // 更新统计显示\n        this.updateStatsDisplay(stats);\n\n        // 处理游戏结束\n        if (newState !== GameState.PLAYING && newState !== GameState.WAITING) {\n            this.showGameOver(newState);\n        }\n    }\n\n    /**\n     * 游戏统计变化\n     */\n    private onStatsChange(stats: GameStats) {\n        this.updateStatsDisplay(stats);\n\n        // 检查是否需要显示逃生门开启提示\n        if (!this._exitDoorNotified && this._gameManager && this._gameManager.isExitZoneGenerated()) {\n            this.showExitDoorNotification();\n            this._exitDoorNotified = true;\n        }\n    }\n\n    // ============ UI更新 ============\n\n    /**\n     * 更新倒计时显示\n     */\n    private updateTimerDisplay(timeRemaining: number) {\n        if (!this.timerLabel) return;\n\n        const minutes = Math.floor(timeRemaining / 60);\n        const seconds = Math.floor(timeRemaining % 60);\n        const timeStr = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n\n        this.timerLabel.string = `时间: ${timeStr}`;\n\n        // 时间不足1分钟时变红色（可选）\n        if (timeRemaining < 60) {\n            this.timerLabel.color = new (this.timerLabel.color.constructor as any)(255, 0, 0, 255);\n        } else {\n            this.timerLabel.color = new (this.timerLabel.color.constructor as any)(255, 255, 255, 255);\n        }\n    }\n\n    /**\n     * 更新统计数据显示\n     */\n    private updateStatsDisplay(stats: GameStats) {\n        // 更新倒计时\n        this.updateTimerDisplay(stats.timeRemaining);\n\n        // 更新矿石数量\n        if (this.oreLabel) {\n            this.oreLabel.string = `矿石: ${stats.oreCollected}`;\n        }\n\n        // 更新逃脱人数\n        if (this.escapedLabel) {\n            this.escapedLabel.string = `逃脱: ${stats.survivorsEscaped}/3`;\n\n            // 达到胜利条件时变绿色\n            if (stats.survivorsEscaped >= 3) {\n                this.escapedLabel.color = new (this.escapedLabel.color.constructor as any)(0, 255, 0, 255);\n            }\n        }\n\n        // 更新淘汰人数\n        if (this.eliminatedLabel) {\n            this.eliminatedLabel.string = `淘汰: ${stats.survivorsEliminated}/3`;\n\n            // 达到追捕者胜利条件时变红色\n            if (stats.survivorsEliminated >= 3) {\n                this.eliminatedLabel.color = new (this.eliminatedLabel.color.constructor as any)(255, 0, 0, 255);\n            }\n        }\n    }\n\n    /**\n     * 显示游戏结束面板\n     */\n    private showGameOver(result: GameState) {\n        if (!this.gameOverPanel || !this.gameOverLabel) {\n            console.warn('[GameUI] 游戏结束面板或文字未绑定');\n            return;\n        }\n\n        // 显示面板\n        this.gameOverPanel.active = true;\n\n        // 设置文字和颜色\n        let resultText = '';\n        let color = new (this.gameOverLabel.color.constructor as any)(255, 255, 255, 255);\n\n        switch (result) {\n            case GameState.HUNTER_WIN:\n                resultText = '追捕者胜利！';\n                color = new (this.gameOverLabel.color.constructor as any)(255, 0, 0, 255); // 红色\n                break;\n\n            case GameState.SURVIVOR_WIN:\n                resultText = '逃生者胜利！';\n                color = new (this.gameOverLabel.color.constructor as any)(0, 255, 0, 255); // 绿色\n                break;\n\n            case GameState.DRAW:\n                resultText = '平局！';\n                color = new (this.gameOverLabel.color.constructor as any)(255, 255, 0, 255); // 黄色\n                break;\n\n            default:\n                resultText = '游戏结束';\n                break;\n        }\n\n        this.gameOverLabel.string = resultText;\n        this.gameOverLabel.color = color;\n\n        console.log(`[GameUI] 显示游戏结束：${resultText}`);\n    }\n\n    /**\n     * 隐藏游戏结束面板\n     */\n    public hideGameOver() {\n        if (this.gameOverPanel) {\n            this.gameOverPanel.active = false;\n        }\n    }\n\n    /**\n     * 显示逃生门开启提示\n     */\n    private showExitDoorNotification() {\n        if (!this.exitDoorNotification) return;\n\n        console.log('[GameUI] 显示逃生门开启提示');\n\n        // 显示提示\n        this.exitDoorNotification.node.active = true;\n        this.exitDoorNotification.string = '逃生门已开启！';\n        this.exitDoorNotification.color = new (this.exitDoorNotification.color.constructor as any)(0, 255, 0, 255); // 绿色\n\n        // 定时隐藏\n        this.scheduleOnce(() => {\n            if (this.exitDoorNotification) {\n                this.exitDoorNotification.node.active = false;\n            }\n        }, this.notificationDuration);\n    }\n\n    // ============ 按钮事件（可由UI按钮调用） ============\n\n    /**\n     * 重新开始游戏\n     */\n    public onRestartButtonClick() {\n        console.log('[GameUI] 点击重新开始');\n\n        if (this._gameManager) {\n            this.hideGameOver();\n            this._gameManager.restartGame();\n        }\n    }\n\n    /**\n     * 开始游戏（用于手动启动）\n     */\n    public onStartButtonClick() {\n        console.log('[GameUI] 点击开始游戏');\n\n        if (this._gameManager) {\n            this._gameManager.startGame();\n        }\n    }\n\n    // ============ 调试功能 ============\n\n    /**\n     * 调试：模拟逃脱\n     */\n    public debugEscape() {\n        if (this._gameManager) {\n            this._gameManager.debugEscape(1);\n        }\n    }\n\n    /**\n     * 调试：模拟淘汰\n     */\n    public debugEliminate() {\n        if (this._gameManager) {\n            this._gameManager.debugEliminate(1);\n        }\n    }\n\n    /**\n     * 调试：设置剩余时间\n     */\n    public debugSetTime(seconds: number) {\n        if (this._gameManager) {\n            this._gameManager.setTimeRemaining(seconds);\n        }\n    }\n}\n"]}