{"version":3,"sources":["file:///Users/clare/Desktop/%E5%89%8D%E5%93%A8AI%E5%B0%8F%E8%AF%BE/ClareProject/Cute-Pet-Escape-Project/CocosProject/assets/scripts/ExitZone.ts"],"names":["_decorator","Component","BoxCollider","CharacterState","GameManager","ccclass","property","ExitZone","_escapedSurvivors","Set","start","collider","node","getComponent","on","onTriggerEnter","isTrigger","console","log","error","event","survivorNode","otherCollider","characterState","isNormal","name","has","requireOreCount","gameManager","getInstance","stats","getStats","oreCollected","onSurvivorEscape","add","onSurvivorEscaped","destroySurvivorOnExit","destroy","active","getEscapedCount","size","reset","clear"],"mappings":"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","sourcesContent":["// 文件名: ExitZone.ts\n// 功能：逃脱区域（任务2.2）\n// 逃生者进入此区域即可逃脱，计入逃脱人数\n\nimport { _decorator, Component, Node, BoxCollider, ITriggerEvent } from 'cc';\nimport { CharacterState, CharacterStateType } from './CharacterState';\nimport { GameManager } from './GameManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ExitZone')\nexport class ExitZone extends Component {\n    @property\n    public exitPrompt: string = \"逃脱区域\"; // 区域提示文字\n\n    @property\n    public requireOreCount: number = 0; // 逃脱所需矿石数量（0=不需要）\n\n    @property\n    public destroySurvivorOnExit: boolean = false; // 逃脱后是否销毁逃生者节点\n\n    private _escapedSurvivors: Set<Node> = new Set(); // 已逃脱的逃生者（防止重复计数）\n\n    start() {\n        // 设置触发器监听\n        const collider = this.node.getComponent(BoxCollider);\n        if (collider) {\n            collider.on('onTriggerEnter', this.onTriggerEnter, this);\n            collider.isTrigger = true; // 确保是触发器模式\n            console.log('[ExitZone] 逃脱区域初始化完成');\n        } else {\n            console.error('[ExitZone] 未找到BoxCollider组件！请添加BoxCollider并设置为Trigger');\n        }\n    }\n\n    /**\n     * 触发器进入\n     */\n    private onTriggerEnter(event: ITriggerEvent) {\n        const survivorNode = event.otherCollider.node;\n\n        // 检查是否是逃生者\n        const characterState = survivorNode.getComponent(CharacterState);\n        if (!characterState) {\n            return; // 不是角色，忽略\n        }\n\n        // 只有正常状态的逃生者才能逃脱\n        if (!characterState.isNormal()) {\n            console.log(`[ExitZone] ${survivorNode.name} 不是正常状态，无法逃脱`);\n            return;\n        }\n\n        // 检查是否已经逃脱过（防止重复计数）\n        if (this._escapedSurvivors.has(survivorNode)) {\n            return;\n        }\n\n        // 检查矿石数量（可选）\n        if (this.requireOreCount > 0) {\n            const gameManager = GameManager.getInstance();\n            if (gameManager) {\n                const stats = gameManager.getStats();\n                if (stats.oreCollected < this.requireOreCount) {\n                    console.log(`[ExitZone] ${survivorNode.name} 矿石数量不足 (${stats.oreCollected}/${this.requireOreCount})`);\n                    return;\n                }\n            }\n        }\n\n        // 逃脱成功\n        this.onSurvivorEscape(survivorNode, characterState);\n    }\n\n    /**\n     * 逃生者逃脱\n     */\n    private onSurvivorEscape(survivorNode: Node, characterState: CharacterState) {\n        console.log(`[ExitZone] ${survivorNode.name} 成功逃脱！`);\n\n        // 标记为已逃脱\n        this._escapedSurvivors.add(survivorNode);\n\n        // 通知GameManager\n        const gameManager = GameManager.getInstance();\n        if (gameManager) {\n            gameManager.onSurvivorEscaped(survivorNode);\n        }\n\n        // 处理逃生者节点\n        if (this.destroySurvivorOnExit) {\n            // 销毁节点（模拟离开场景）\n            survivorNode.destroy();\n        } else {\n            // 隐藏节点（保留用于调试）\n            survivorNode.active = false;\n        }\n    }\n\n    /**\n     * 获取已逃脱人数\n     */\n    public getEscapedCount(): number {\n        return this._escapedSurvivors.size;\n    }\n\n    /**\n     * 重置逃脱记录（用于重新开始游戏）\n     */\n    public reset() {\n        this._escapedSurvivors.clear();\n        console.log('[ExitZone] 逃脱记录已重置');\n    }\n}\n"]}